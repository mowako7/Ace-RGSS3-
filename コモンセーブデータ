#==============================================================================
# ■ コモンセーブデータ by gentlawk via ココナラ ver1.00
#------------------------------------------------------------------------------
# Copyright (c) 2021 gentlawk
# このスクリプトはMITライセンスです。
# https://opensource.org/licenses/mit-license.php
#==============================================================================
#------------------------------------------------------------------------------
# ■内容
# 指定したスイッチ、変数をゲーム全体の共通データとして使用できるようにします。
# オプションの音量設定や、クリアデータ等に利用できます。
#
# ■位置
# 特になし
#
# ■使用方法
# 詳細設定欄にて共通データにするスイッチIDと変数IDを指定します。
# ゲーム中にセーブを行うと指定したIDの値が共通データとして保存されます。
# 以後、ゲーム起動時、ロード時、ニューゲーム時に指定したIDの値がロードされます。
# 
# ゲーム中の任意のタイミングで共通データをセーブしたい場合は
# イベントコマンドのスクリプトで以下を実行してください
#   CommonDataManager.save
#
# 共通データを削除したい場合は、プロジェクトのフォルダに
#「CommonSave.rvdata2」が作成されていますのでこちらを削除してください。
#
#------------------------------------------------------------------------------
module Gentlawk
  @@gentlawk_includes ||= {}
  @@gentlawk_includes[:N_CommonSaveData] = 1.00
  module CommonSaveData
    #▲▽▲▽▲▽▲▽▲▽▲▽▲▽▲▽
    #詳細設定
    
    # 共通データにするスイッチID一覧
    COMMON_SWITCHES = [10, 11, 12, 13, 14, 15]
    # 共通データにする変数ID一覧
    COMMON_VARIABLES = [10, 11, 12, 13, 14, 15]
    
    #▲▽▲▽▲▽▲▽▲▽▲▽▲▽▲▽
  end
  class RequirementException < StandardError; end
  def self.requirement(name, version)
    if include?(name, version)
      return true
    end
    raise RequirementException, "#{name} ver#{version}以上が導入されていません"
  end
  def self.include?(name, version)
    @@gentlawk_includes[name] && @@gentlawk_includes[name] >= version
  end
end
#==============================================================================
# ■ CommonDataManager
#==============================================================================
module CommonDataManager
  FILENAME = "CommonSave.rvdata2"
  #--------------------------------------------------------------------------
  # ● セーブファイルの存在判定
  #--------------------------------------------------------------------------
  def self.save_file_exists?
    !Dir.glob(FILENAME).empty?
  end
  #--------------------------------------------------------------------------
  # ● セーブの実行
  #--------------------------------------------------------------------------
  def self.save
    File.open(FILENAME, "wb") do |file|
      Marshal.dump(make_save_contents, file)
    end
    return true
  end
  #--------------------------------------------------------------------------
  # ● セーブ内容の作成
  #--------------------------------------------------------------------------
  def self.make_save_contents
    contents = {}
    switches = {}
    Gentlawk::CommonSaveData::COMMON_SWITCHES.each do |id|
      switches[id] = $game_switches[id]
    end
    contents[:switches] = switches
    variables = {}
    Gentlawk::CommonSaveData::COMMON_VARIABLES.each do |id|
      variables[id] = $game_variables[id]
    end
    contents[:variables] = variables
    contents
  end
  #--------------------------------------------------------------------------
  # ● ロードの実行
  #--------------------------------------------------------------------------
  def self.load
    return true unless save_file_exists?
    File.open(FILENAME, "rb") do |file|
      extract_save_contents(Marshal.load(file))
    end
    return true
  end
  #--------------------------------------------------------------------------
  # ● セーブ内容の展開
  #--------------------------------------------------------------------------
  def self.extract_save_contents(contents)
    contents[:switches].each do |id, value|
      next unless Gentlawk::CommonSaveData::COMMON_SWITCHES.include?(id)
      $game_switches[id] = value
    end
    contents[:variables].each do |id, value|
      next unless Gentlawk::CommonSaveData::COMMON_VARIABLES.include?(id)
      $game_variables[id] = value
    end
  end
end
#==============================================================================
# ■ DataManager
#==============================================================================
module DataManager
  #--------------------------------------------------------------------------
  # ● プレイヤーの初期位置存在チェック
  #--------------------------------------------------------------------------
  def self.check_player_location
    if $data_system.start_map_id == 0
      msgbox(Vocab::PlayerPosError)
      exit
    end
  end
  #--------------------------------------------------------------------------
  # ● 各種ゲームオブジェクトの作成
  #--------------------------------------------------------------------------
  class << self; alias gentlawk_common_save_data_create_game_objects create_game_objects; end
  def self.create_game_objects
    gentlawk_common_save_data_create_game_objects
    CommonDataManager.load
  end
  #--------------------------------------------------------------------------
  # ● ニューゲームのセットアップ
  #--------------------------------------------------------------------------
  def self.setup_new_game
    create_game_objects
    $game_party.setup_starting_members
    $game_map.setup($data_system.start_map_id)
    $game_player.moveto($data_system.start_x, $data_system.start_y)
    $game_player.refresh
    Graphics.frame_count = 0
  end
  #--------------------------------------------------------------------------
  # ● セーブの実行
  #--------------------------------------------------------------------------
  class << self; alias gentlawk_common_save_data_save_game save_game; end
  def self.save_game(index)
    return false unless gentlawk_common_save_data_save_game(index)
    CommonDataManager.save 
    true
  end
  #--------------------------------------------------------------------------
  # ● ロードの実行
  #--------------------------------------------------------------------------
  class << self; alias gentlawk_common_save_data_load_game load_game; end
  def self.load_game(index)
    return false unless gentlawk_common_save_data_load_game(index)
    CommonDataManager.load
    true
  end
end
